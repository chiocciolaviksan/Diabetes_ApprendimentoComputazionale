%% ----------------------------------------------------------- %
% 10-Fold Cross Validation - ANOVA
% Original Training set

clear all
close all
clc

run DatiTenFold.m

% metto insieme i valori per poterli testare con anova
A = [Naive; Random; Tree; kNN; SVM; Logistic];

% calcolo intervalli i confidenza
k = 10;
alpha = 0.05;
costantT = tinv(1-(alpha/2),k-1);
Amean = mean(A');
devStd = std(A');

underIC = Amean-(costantT*devStd*(1/sqrt(k)));
upperIC = Amean+(costantT*devStd*(1/sqrt(k)));
titles = {'Naive Bayes','Random Forest','Tree','kNN','SVM','Logistic Regression'};

figure('Name','original test Set')
for i = 1:6
     subplot(2,3,i)
     histogram(A(i,:),10,'FaceAlpha',0.1,'EdgeAlpha',0.1)
     title({'accuracy IC for ' , titles{i}})
     xline(Amean(i),'-',{'Mean',Amean(i)});
     xline([underIC(i) upperIC(i)],'--',{underIC(i),upperIC(i)})
end


for i = 1:6
    H(i)=kstest((A(i,:)-mean(A(i,:)))./std(A(i,:)));
end

[p,tbl,stats] = anova2(A');
c1 = multcompare(stats,'Estimate','column');


%% ----------------------------------------------------------- %
% 10-Fold Cross Validation - ANOVA
% Training set SMOTE

clear all
close all
clc

% Prova 1
% run Prova1SMOTE.m

% Prova 2
% Naive = [0.6571428571428571	0.7	0.7714285714285715	0.7	0.7142857142857143	0.7142857142857143	0.7101449275362319	0.8260869565217391	0.8405797101449275	0.6956521739130435];
% Random = [0.7142857142857143	0.7714285714285715	0.8428571428571429	0.8285714285714286	0.8	0.7714285714285715	0.7681159420289855	0.855072463768116	0.855072463768116	0.7536231884057971];
% Tree = [0.6714285714285714	0.7285714285714285	0.7428571428571429	0.8285714285714286	0.7142857142857143	0.7285714285714285	0.855072463768116	0.8840579710144928	0.782608695652174	0.7101449275362319];
% kNN = [0.7428571428571429	0.7714285714285715	0.8142857142857143	0.7857142857142857	0.8428571428571429	0.7428571428571429	0.8115942028985508	0.8260869565217391	0.8985507246376812	0.7681159420289855];
% SVM	= [0.6571428571428571	0.6857142857142857	0.7857142857142857	0.7571428571428571	0.7857142857142857	0.7714285714285715	0.7101449275362319	0.8260869565217391	0.7536231884057971	0.7536231884057971];
% Logistic = [0.6285714285714286	0.6857142857142857	0.7285714285714285	0.6857142857142857	0.7714285714285715	0.7571428571428571	0.7391304347826086	0.8115942028985508	0.7391304347826086	0.7536231884057971];

% Prova 3
% Naive = [0.6571428571428571	0.7	0.7428571428571429	0.7428571428571429	0.7428571428571429	0.7142857142857143	0.7681159420289855	0.8115942028985508	0.782608695652174	0.6811594202898551];
% Random = [0.7142857142857143	0.7428571428571429	0.8	0.8285714285714286	0.8	0.7714285714285715	0.7971014492753623	0.8405797101449275	0.8115942028985508	0.7101449275362319];
% Tree = [0.8285714285714286	0.7571428571428571	0.7714285714285715	0.8	0.7571428571428571	0.7857142857142857	0.7681159420289855	0.7536231884057971	0.7101449275362319	0.7391304347826086];
% kNN = [0.7428571428571429	0.7857142857142857	0.8285714285714286	0.8	0.8285714285714286	0.7571428571428571	0.782608695652174	0.8115942028985508	0.8695652173913043	0.782608695652174];
% SVM = [0.7142857142857143	0.6714285714285714	0.7714285714285715	0.7571428571428571	0.7857142857142857	0.7714285714285715	0.7101449275362319	0.8405797101449275	0.6956521739130435	0.7971014492753623];
% Logistic = [0.5857142857142857	0.6714285714285714	0.7285714285714285	0.7142857142857143	0.7857142857142857	0.7714285714285715	0.7536231884057971	0.8115942028985508	0.6956521739130435	0.7681159420289855];

% Prova 4
% Naive = [0.6571428571428571	0.7142857142857143	0.7428571428571429	0.7285714285714285	0.7285714285714285	0.7142857142857143	0.7246376811594203	0.7971014492753623	0.7246376811594203	0.6666666666666666];
% Random = [0.6714285714285714	0.7571428571428571	0.8428571428571429	0.8	0.7857142857142857	0.7714285714285715	0.7681159420289855	0.8260869565217391	0.7246376811594203	0.6811594202898551];
% Tree = [0.6857142857142857	0.7857142857142857	0.8142857142857143	0.8	0.7	0.6857142857142857	0.782608695652174	0.8260869565217391	0.7971014492753623	0.7246376811594203];
% kNN = [0.7285714285714285	0.7857142857142857	0.8428571428571429	0.8428571428571429	0.8571428571428571	0.7	0.8260869565217391	0.8260869565217391	0.7971014492753623	0.7536231884057971];
% SVM = [0.6428571428571429	0.7285714285714285	0.7571428571428571	0.6857142857142857	0.7857142857142857	0.7142857142857143	0.8405797101449275	0.8405797101449275	0.8260869565217391	0.7681159420289855];
% Logistic = [0.6	0.7	0.6714285714285714	0.6857142857142857	0.7857142857142857	0.7428571428571429	0.8695652173913043	0.8405797101449275	0.855072463768116	0.7971014492753623];

% Prova 5
Naive = [0.7285714285714285	0.6857142857142857	0.7857142857142857	0.7142857142857143	0.6857142857142857	0.7	0.782608695652174	0.782608695652174	0.8260869565217391	0.6521739130434783];
Random = [0.7428571428571429	0.7571428571428571	0.8571428571428571	0.8285714285714286	0.7714285714285715	0.7428571428571429	0.782608695652174	0.8260869565217391	0.8260869565217391	0.7391304347826086];
kNN	= [0.8	0.7714285714285715	0.8571428571428571	0.7857142857142857	0.8571428571428571	0.7428571428571429	0.782608695652174	0.7971014492753623	0.8840579710144928	0.782608695652174];
Tree = [0.7571428571428571	0.7428571428571429	0.8	0.8571428571428571	0.6571428571428571	0.6714285714285714	0.7681159420289855	0.855072463768116	0.8405797101449275	0.7681159420289855];
SVM	= [0.7285714285714285	0.7	0.8	0.7285714285714285	0.7714285714285715	0.7428571428571429	0.6811594202898551	0.7971014492753623	0.7246376811594203	0.7681159420289855];
Logistic =[0.7	0.7	0.7	0.6714285714285714	0.7571428571428571	0.7571428571428571	0.7391304347826086	0.7681159420289855	0.7246376811594203	0.7536231884057971];


% metto insieme i valori per poterli testare con anova
A = [Naive; Random; Tree; kNN; SVM; Logistic];

% calcolo intervalli i confidenza
k = 10;
alpha = 0.05;
costantT = tinv(1-(alpha/2),k-1);
Amean = mean(A');
devStd = std(A');

underIC = Amean-(costantT*devStd*(1/sqrt(k)));
upperIC = Amean+(costantT*devStd*(1/sqrt(k)));
titles = {'Naive Bayes','Random Forest','Tree','kNN','SVM','Logistic Regression'};

figure('Name','SMOTE')
for i = 1:6
     subplot(2,3,i)
     histogram(A(i,:),10,'FaceAlpha',0.1,'EdgeAlpha',0.1)
     title({'accuracy IC for ' , titles{i}})
     xline(Amean(i),'-',{'Mean',Amean(i)});
     xline([underIC(i) upperIC(i)],'--',{underIC(i),upperIC(i)})
end


for i = 1:6
    H(i)=kstest((A(i,:)-mean(A(i,:)))./std(A(i,:)));
end

[p,tbl,stats] = anova2(A');

c1 = multcompare(stats,"Estimate","column");


%% ----------------------------------------------------------- %
% 10-Fold Cross Validation - ANOVA
% Training set Data Augmentation

clear all
close all
clc

% Prova 1
% run Prova1DataAug.m

% Prova 2
% Naive = [0.7222222222222222	0.7268518518518519	0.7361111111111112	0.7870370370370371	0.7534883720930232	0.7581395348837209	0.7209302325581395	0.7302325581395349	0.7302325581395349	0.7441860465116279];
% Random = [0.8287037037037037	0.8379629629629629	0.8472222222222222	0.8564814814814815	0.8186046511627907	0.8418604651162791	0.8372093023255814	0.8418604651162791	0.786046511627907	0.8325581395348837];
% kNN = [0.9814814814814815	0.9722222222222222	0.9814814814814815	0.9861111111111112	0.9627906976744186	0.9627906976744186	0.958139534883721	0.9720930232558139	0.9813953488372092	0.9720930232558139];
% Tree = [0.9305555555555556	0.9120370370370371	0.9212962962962963	0.9120370370370371	0.9116279069767442	0.8976744186046511	0.9023255813953488	0.9488372093023256	0.9162790697674419	0.9209302325581395];
% SVM	= [0.7685185185185185	0.8148148148148148	0.8101851851851852	0.8055555555555556	0.7488372093023256	0.8093023255813954	0.772093023255814	0.8046511627906977	0.7953488372093023	0.7906976744186046];
% Logistic = [0.7407407407407407	0.7361111111111112	0.7407407407407407	0.7731481481481481	0.7441860465116279	0.8093023255813954	0.7581395348837209	0.772093023255814	0.7488372093023256	0.7488372093023256];

% Prova 3
% Naive = [0.6990740740740741	0.7592592592592593	0.7129629629629629	0.7731481481481481	0.772093023255814	0.7488372093023256	0.7348837209302326	0.6976744186046512	0.7441860465116279	0.7162790697674418];
% Logistic = [0.7314814814814815	0.7407407407407407	0.7268518518518519	0.7546296296296297	0.7534883720930232	0.786046511627907	0.7767441860465116	0.7534883720930232	0.7534883720930232	0.7255813953488373];
% SVM	= [0.7638888888888888	0.8148148148148148	0.8055555555555556	0.8148148148148148	0.7674418604651163	0.8046511627906977	0.786046511627907	0.8	0.8093023255813954	0.7813953488372093];
% Random	= [0.8240740740740741	0.8425925925925926	0.8287037037037037	0.8657407407407407	0.827906976744186	0.8372093023255814	0.8465116279069768	0.8325581395348837	0.8418604651162791	0.8232558139534883];
% Tree = [0.9027777777777778	0.9212962962962963	0.8981481481481481	0.9259259259259259	0.9069767441860465	0.9209302325581395	0.9255813953488372	0.9255813953488372	0.9441860465116279	0.8837209302325582];
% kNN	= [0.9768518518518519	0.9814814814814815	0.9814814814814815	0.9861111111111112	0.9627906976744186	0.9767441860465116	0.9674418604651163	0.9813953488372092	0.9767441860465116	0.9627906976744186];

% Prova 4
% Naive = [0.7037037037037037	0.7453703703703703	0.7175925925925926	0.7638888888888888	0.7627906976744186	0.772093023255814	0.7348837209302326	0.7209302325581395	0.7488372093023256	0.7302325581395349];
% Logistic =[0.7129629629629629	0.7314814814814815	0.7037037037037037	0.7361111111111112	0.7441860465116279	0.8093023255813954	0.7395348837209302	0.7767441860465116	0.7674418604651163	0.7395348837209302];
% SVM	= [0.7685185185185185	0.8148148148148148	0.7916666666666666	0.7962962962962963	0.7581395348837209	0.8325581395348837	0.7627906976744186	0.8046511627906977	0.8232558139534883	0.7906976744186046];
% Random = [0.8009259259259259	0.8333333333333334	0.8333333333333334	0.8379629629629629	0.8186046511627907	0.8697674418604651	0.8465116279069768	0.8465116279069768	0.827906976744186	0.827906976744186];
% Tree = [0.9074074074074074	0.9444444444444444	0.8935185185185185	0.8703703703703703	0.8930232558139535	0.9255813953488372	0.9209302325581395	0.9534883720930233	0.9116279069767442	0.9116279069767442];
% kNN	= [0.9722222222222222	0.9768518518518519	0.9814814814814815	0.9814814814814815	0.9627906976744186	0.9813953488372092	0.9674418604651163	0.9767441860465116	0.986046511627907	0.9674418604651163];

% Prova 5
Naive = [0.7268518518518519	0.7129629629629629	0.7037037037037037	0.7916666666666666	0.7534883720930232	0.7534883720930232	0.7162790697674418	0.7023255813953488	0.7348837209302326	0.7162790697674418];
Logistic = [0.7083333333333334	0.7361111111111112	0.7129629629629629	0.7546296296296297	0.7534883720930232	0.8	0.7441860465116279	0.7767441860465116	0.7441860465116279	0.7488372093023256];
SVM	= [0.7638888888888888	0.7916666666666666	0.7916666666666666	0.7870370370370371	0.772093023255814	0.8046511627906977	0.7813953488372093	0.8186046511627907	0.8046511627906977	0.7906976744186046];
Random	= [0.8148148148148148	0.8333333333333334	0.8425925925925926	0.8796296296296297	0.8418604651162791	0.8604651162790697	0.8418604651162791	0.8744186046511628	0.827906976744186	0.8418604651162791];
Tree = [0.8981481481481481	0.9305555555555556	0.9212962962962963	0.875	0.9023255813953488	0.9162790697674419	0.9023255813953488	0.9395348837209302	0.9023255813953488	0.8976744186046511];
kNN	= [0.9629629629629629	0.9953703703703703	0.9907407407407407	0.9953703703703703	0.9627906976744186	0.9767441860465116	0.958139534883721	0.9767441860465116	0.9627906976744186	0.9674418604651163];

% metto insieme i valori per poterli testare con anova
A = [Naive; Random; Tree; kNN; SVM; Logistic];

% calcolo intervalli i confidenza
k = 10;
alpha = 0.05;
costantT = tinv(1-(alpha/2),k-1);
Amean = mean(A');
devStd = std(A');

underIC = Amean-(costantT*devStd*(1/sqrt(k)));
upperIC = Amean+(costantT*devStd*(1/sqrt(k)));
titles = {'Naive Bayes','Random Forest','Tree','kNN','SVM','Logistic Regression'};

figure('Name','Data Augmentation')
for i = 1:6
     subplot(2,3,i)
     histogram(A(i,:),10,'FaceAlpha',0.1,'EdgeAlpha',0.1)
     title({'accuracy IC for ' , titles{i}})
     xline(Amean(i),'-',{'Mean',Amean(i)});
     xline([underIC(i) upperIC(i)],'--',{underIC(i),upperIC(i)})
end


for i = 1:6
    H(i)=kstest((A(i,:)-mean(A(i,:)))./std(A(i,:)));
end

[p,tbl,stats] = anova2(A');
multcompare(stats,'Estimate','column');




